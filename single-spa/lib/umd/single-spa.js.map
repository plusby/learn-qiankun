{"version":3,"file":"single-spa.js","sources":["../../src/application/helper.js","../../src/start.js","../../src/lifecycles/load.js","../../src/lifecycles/unMount.js","../../src/lifecycles/bootstrap.js","../../src/lifecycles/mount.js","../../src/navigations/nav-events.js","../../src/navigations/reRoute.js","../../src/application/app.js","../../src/single-spa.js"],"sourcesContent":["export const NOT_LOADED = 'NOT_LOADED' // 应用初始状态\r\nexport const LOADING_SOURCE_CODE = 'LOADING_SOURCE_CODE' // 加载资源\r\nexport const NOT_BOOTSTRAPPED = 'NOT_BOOTSTRAPPED' // 还未调用bootstrap方法\r\nexport const BOOTSTRAPPING = 'BOOTSTRAPPING' // 启动中\r\nexport const NOT_MOUNTED = 'NOT_MOUNTED' // 还没有调用mount方法\r\nexport const MOUNTING = 'MOUNTING' // 正在挂载中\r\nexport const MOUNTED = 'MOUNTED' // 挂载完毕\r\nexport const UPDATING = 'UPDATING' // 更新中\r\nexport const UNMOUNTING = 'UNMOUNTING' // 解除挂载\r\nexport const UNLOADING = 'UNLOADING' // 完全卸载中\r\nexport const LOAD_ERR = 'LOAD_ERR' // 资源加载失败\r\nexport const SKIP_BECAUSE_BROKEN = 'SKIP_BECAUSE_BROKEN' // 代码出错\r\n\r\n// 当前应用是否被激活\r\nexport function isActive(app){\r\n  return app.status === MOUNTED\r\n}\r\n\r\n// 当前这个应用是否要被激活\r\nexport function shouldBeActive(app){ // 返回true 那么应用应该就开始初始化等一系列操作\r\n  return app.activeWhen(window.location) // 根据路径判断是否包含指定的路径，包含就激活当前应用\r\n}","import { reRoute } from './navigations/reRoute'\r\n\r\nexport let started = false\r\n\r\n// 启动移动\r\nexport function start(){\r\n  started = true \r\n  reRoute()\r\n}","import { LOADING_SOURCE_CODE, NOT_BOOTSTRAPPED } from '../application/helper'\r\n\r\n// 扁平化数组函数\r\nfunction flattenFnArray(fns){\r\n  fns = Array.isArray(fns) ? fns : [fns]\r\n  return (props)=>{\r\n    return fns.reduce((last,fn)=>{ // 通过reduce配合promise实现连续执行数组中的每一项\r\n      return last.then(()=>{\r\n        return fn(props)\r\n      })\r\n    },Promise.resolve())\r\n  }\r\n}\r\n\r\n// 加载应用\r\nexport function toLoadPromise(app){\r\n  if(app.isLoadPromise){\r\n    return app.isLoadPromise\r\n  }\r\n  return (app.isLoadPromise = (() => {\r\n    app.status = LOADING_SOURCE_CODE // 修改状态为加载资源\r\n    const { bootstrap, mount, unmount } = app.loadApp(app.customProps) // 获取到应用中的声明周期方法\r\n    app.status = NOT_BOOTSTRAPPED // 修改状态为 还未调用bootstrap方法\r\n    // 扁平化各个生命周期中的数组函数并且挂载到应用对象上\r\n    app.bootstrap = flattenFnArray(bootstrap)\r\n    app.mount = flattenFnArray(mount)\r\n    app.unmount = flattenFnArray(unmount)\r\n    return app\r\n  })())\r\n}","import { UNMOUNTING, MOUNTED, MOUNTING } from '../application/helper'\r\n\r\n\r\n// 卸载时候执行的函数(主要是修改应用的状态和执行用户传递过来的卸载的函数)\r\nexport async function appToUnMountPromise(app){\r\n  // 还没有挂载完毕不能进行卸载\r\n  if(app.status !== MOUNTED){\r\n    return app\r\n  }\r\n  // 修改状态为正在挂载中\r\n  app.status = MOUNTING\r\n  // 执行传递过来的卸载函数\r\n  await app.unmount(app.customProps)\r\n  // 修改状态为卸载\r\n  app.status = UNMOUNTING\r\n  app.isLoadPromise = null\r\n  return app\r\n\r\n}","import { BOOTSTRAPPING, NOT_MOUNTED, NOT_BOOTSTRAPPED} from '../application/helper'\r\n\r\n// 启动的函数\r\nexport async function toBootstrapPromise(app){\r\n  // 只有处在NOT_BOOTSTRAPPED还未启动的状态才能够启动\r\n  if(app.status !== NOT_BOOTSTRAPPED){\r\n    return app\r\n  }\r\n  // 修改状态为启动中\r\n  app.status = BOOTSTRAPPING\r\n  // 调用用户传递过来的启动函数\r\n  await app.bootstrap(app.customProps)\r\n  // 修改状态为还未挂载\r\n  app.status = NOT_MOUNTED\r\n  return app\r\n}","import { MOUNTING, MOUNTED, NOT_MOUNTED} from '../application/helper'\r\n\r\n// 挂载应用\r\nexport async function toMountPromise(app){\r\n  // 只有还没有挂载的状态才能进行挂载\r\n  if(app.status !== 'NOT_MOUNTED'){\r\n    return app\r\n  }\r\n  // 修改状态为挂载中\r\n  app.status = MOUNTING\r\n  // 调用用户传递的挂载的函数\r\n  await app.mount(app.customProps)\r\n  // 修改状态为挂载完毕\r\n  app.status = MOUNTED\r\n  return app\r\n}","import { reRoute } from './reRoute'\r\n\r\nexport const events = [ 'hashchange', 'popstate']\r\n\r\nfunction urlReroute(){\r\n  // console.log('arguments',arguments)\r\n  reRoute([],arguments)\r\n}\r\n\r\nconst captureEventListener = {\r\n  hashchange: [],\r\n  popstate: [],\r\n}\r\n\r\n/*\r\n  popstate\r\n  每当同一个文档的浏览历史（即history对象）出现变化时，就会触发popstate事件\r\n  只有用户点击浏览器倒退按钮和前进按钮，或者使用 JavaScript 调用History.back()、\r\n  History.forward()、History.go()方法时才会触发。另外，该事件只针对同一个文档，\r\n  如果浏览历史的切换，导致加载不同的文档，该事件也不会触发。\r\n\r\n  注意，仅仅调用pushState()方法或replaceState()方法 ，并不会触发该事件\r\n      该事件只针对同一个文档，如果浏览历史的切换，导致加载不同的文档，该事件也不会触发。\r\n\r\n  hashchange和popstate的区别：\r\n   hashchange是老的api只能监听hash的变化，popstate是h5的history新的api,它不仅可以监听hash还可以监听非hash的同源url，\r\n   所以一般用法是浏览器支持就用popstate, 不支持再降级使用hashchange\r\n\r\n  hashchange和popstate都写了，如果是hash的改变，那么先触发popstate再触发hashchange\r\n*/\r\n\r\nwindow.addEventListener('hashchange', urlReroute)\r\nwindow.addEventListener('popstate', urlReroute)\r\n\r\n// 保存原生的事件\r\nconst originalAddEventListener = window.addEventListener\r\nconst originalRemoveEventListener = window.removeEventListener\r\n\r\n// 重写addEventListener\r\nwindow.addEventListener = function(eventName, fn){\r\n  console.log(eventName)\r\n  // 是hashchange或popstate事件，不存在就存入数组中\r\n  if(events.indexOf(eventName) !== -1 && !captureEventListener[eventName].some(item=>item===fn)){\r\n    captureEventListener[eventName].push(fn)\r\n  }\r\n  // 使用原生事件进行执行监听\r\n  return originalAddEventListener.apply(this,arguments)\r\n}\r\n\r\n// 重写removeEventListener\r\nwindow.removeEventListener = function(eventName, fn){\r\n  if(events.indexOf(eventName) !== -1){\r\n    captureEventListener[eventName] = captureEventListener[eventName].filter(item=>item!==fn)\r\n  }\r\n  return originalRemoveEventListener.apply(this,arguments)\r\n}\r\n\r\n// 实现通过pushState或replaceState改变地址时加载相应的应用\r\nfunction patchUpdateState(event, name){\r\n  return function(){\r\n    console.log(name)\r\n    // 获取url改变之前的值\r\n    const urlBefore = window.location.href\r\n    // 调用H5 history的方法切换地址\r\n    event.apply(this,arguments)\r\n    // 获取切换之后的地址\r\n    const urlAfter = window.location.href\r\n    // 前后两个地址不一样 就重新加载应用\r\n    if(urlBefore!==urlAfter ){\r\n      urlReroute(new PopStateEvent('popState'))\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n  重写replaceState和pushState\r\n  因为replaceState和pushState只能使得地址栏的地址发生改变，但是页面并不会跟着改变并且不能被popstate监听到，因此\r\n  重写这两个方法，再修改地址之后就执行页面的改变\r\n*/\r\nwindow.history.replaceState = patchUpdateState(window.history.replaceState, 'replaceState')\r\nwindow.history.pushState = patchUpdateState(window.history.pushState, 'pushState')\r\n","import { started } from '../start'\r\nimport { getAppStatusChange } from '../application/app'\r\nimport { toLoadPromise } from '../lifecycles/load'\r\nimport { appToUnMountPromise } from '../lifecycles/unMount'\r\nimport { toBootstrapPromise } from '../lifecycles/bootstrap'\r\nimport { toMountPromise } from '../lifecycles/mount'\r\nimport './nav-events'\r\n\r\nexport function reRoute(){\r\n  // 检查应用的状态 获取到不同阶段的应用\r\n  const { appToLoad, appToMount, appToUnMount} = getAppStatusChange()\r\n  console.log(started,appToLoad, appToMount, appToUnMount)\r\n\r\n  if (started) { // 已经启动的应用\r\n    return performAppChange() // 根据路径装载应用\r\n  } else { // 注册应用\r\n    return loadApp() // 预加载应用\r\n  }\r\n\r\n  // 预加载应用\r\n  async function loadApp(){\r\n    // 修改各个应用的状态并且扁平化应用中的生命周期的函数数组\r\n    let apps = await Promise.all(appToLoad.map(toLoadPromise))\r\n  }\r\n\r\n  // 根据路径装载应用\r\n  async function performAppChange(){\r\n    // 先把之前的应用进行卸载\r\n    const unmountPromises = await appToUnMount.map(appToUnMountPromise)\r\n    // 再进行加载\r\n    appToLoad.map(async (app)=>{\r\n      // 加载应用为把应用中的声明构造函数进行扁平化处理并且放在应用对应的属性上\r\n      app = await toLoadPromise(app)\r\n      // 启动\r\n      app = await toBootstrapPromise(app)\r\n      // 挂载\r\n      return await toMountPromise(app)\r\n    })\r\n\r\n    // 有的一开始就加载了需要直接挂载(各个阶段的函数是根据状态进行执行的)\r\n    appToMount.map(async (app)=>{\r\n      // 启动\r\n      app = await toBootstrapPromise(app)\r\n      // 挂载\r\n      return await toMountPromise(app)\r\n    })\r\n  }   \r\n}\r\n\r\n","import { NOT_LOADED, LOADING_SOURCE_CODE, NOT_BOOTSTRAPPED, BOOTSTRAPPING, NOT_MOUNTED, MOUNTING, MOUNTED, UNMOUNTING, shouldBeActive } from './helper'\r\nimport { reRoute } from '../navigations/reRoute'\r\n\r\n/*\r\n  @params {*} appName 应用名称\r\n  @params {*} loadApp 加载的应用\r\n  @params {*} activeWhen 当激活时调用的 loadApp\r\n  @params {*} customProps 用户自定义属性\r\n*/\r\n\r\nconst apps = [] // 存放所有的应用\r\n\r\n// 维护应用所有的状态\r\nexport function registerApplication(appName, loadApp, activeWhen, customProps){\r\n  apps.push({\r\n    name: appName,\r\n    loadApp,\r\n    activeWhen,\r\n    customProps,\r\n    status: NOT_LOADED\r\n  })\r\n  // 挂载\r\n  reRoute()\r\n}\r\n\r\n// app的状态改变\r\nexport function getAppStatusChange(){\r\n  const appToLoad = [] // 需要被加载的app\r\n  const appToMount = [] // 需要被挂载的app\r\n  const appToUnMount = [] // 需要被卸载的app\r\n  console.log('apps',apps)\r\n  apps.forEach(app=>{\r\n    // 当前这个应用是否要被激活\r\n    const isActive = shouldBeActive(app)\r\n    switch(app.status){\r\n      case NOT_LOADED: // 应用初始状态或加载资源状态时这个应用应该被存放到需要被加载的app中\r\n      case LOADING_SOURCE_CODE:\r\n      case UNMOUNTING:\r\n        if(isActive){\r\n          appToLoad.push(app)\r\n        }\r\n        break\r\n      case NOT_BOOTSTRAPPED: // 还未调用bootstrap方法、启动中、还没有调用mount方法的状态的子应用 这个应用被存放到需要被挂载的app中\r\n      case BOOTSTRAPPING:\r\n      case NOT_MOUNTED:\r\n        if(isActive){\r\n          appToMount.push(app)\r\n        }\r\n        break\r\n      case MOUNTED: // 已经挂载了下一步这个应该就是被卸载\r\n        if(!isActive){\r\n          appToUnMount.push(app)\r\n        }\r\n        break\r\n    }\r\n  })\r\n  \r\n  return {\r\n    appToLoad,\r\n    appToMount,\r\n    appToUnMount\r\n  }\r\n}\r\n\r\n\r\n","import { registerApplication } from './application/app'\r\nimport { start } from './start'\r\n\r\nwindow.singleSpa = {\r\n  registerApplication,\r\n  start\r\n}"],"names":[],"mappings":"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"}